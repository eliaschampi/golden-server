// Code generated by sqlc. DO NOT EDIT.
// source: users.sql

package sqlc

import (
	"context"
)

const getUsers = `-- name: GetUsers :many
SELECT dni, name FROM users
`

type GetUsersRow struct {
	Dni  string
	Name string
}

func (q *Queries) GetUsers(ctx context.Context) ([]GetUsersRow, error) {
	rows, err := q.db.QueryContext(ctx, getUsers)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []GetUsersRow{}
	for rows.Next() {
		var i GetUsersRow
		if err := rows.Scan(&i.Dni, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
